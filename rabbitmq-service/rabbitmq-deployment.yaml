apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: quote-of-the-day-app
spec:
  serviceName: "rabbitmq"
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      initContainers:
      - name: setup-rabbitmq
        image: rabbitmq:3.8-management
        env:
          - name: RABBITMQ_DEFAULT_USER
            valueFrom:
              secretKeyRef:
                name: rabbitmq-secret
                key: rabbitmq-username
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              secretKeyRef:
                name: rabbitmq-secret
                key: rabbitmq-password
        command: ['sh', '-c', 
          'rabbitmq-plugins enable rabbitmq_management && 
           sleep 10 && 
           rabbitmqctl wait /var/lib/rabbitmq/mnesia/rabbit@$HOSTNAME.pid &&
           rabbitmqctl add_user $RABBITMQ_DEFAULT_USER $RABBITMQ_DEFAULT_PASS || true &&
           rabbitmqctl set_user_tags $RABBITMQ_DEFAULT_USER administrator &&
           rabbitmqctl set_permissions -p / $RABBITMQ_DEFAULT_USER ".*" ".*" ".*" &&
           rabbitmqctl delete_user guest || true']
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
      containers:
      - name: rabbitmq
        image: rabbitmq:3.8-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
